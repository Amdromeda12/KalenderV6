<Window x:Class="KalenderV6.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:KalenderV6"
        xmlns:viewmodel="clr-namespace:KalenderV6.ViewModel"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:Converters="clr-namespace:KalenderV6.Converters"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel, IsDesignTimeCreatable=True}"
        Title="MainWindow" Height="450" Width="800"
        ResizeMode="NoResize" WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        Icon="Assets/KIcon.ico">

    <Window.DataContext>
        <viewmodel:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        
        <Converters:BooleanNegationConverter x:Key="BooleanNegationConverter"/>

        <Style x:Key="font_style" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <ImageBrush x:Key="tb_mouse_over" ImageSource="Assets/crown2.png"/>

        <Style TargetType="ToolTip" x:Key="tooltip_style">
            <Setter Property="Placement" Value="Right"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="Background" Value="#4A5668"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="PlacementRectangle" Value="60,0,0,0"/>
            <Setter Property="HorizontalOffset" Value="15"/>
            <Setter Property="VerticalOffset" Value="6"/>
            <Setter Property="HasDropShadow" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="tb_style" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource tb_mouse_over}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource tb_mouse_over}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource tb_mouse_over}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource tb_mouse_over}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ContentControl">
            <Setter Property="Opacity" Value="1.0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsToggleButtonChecked}" Value="True">
                    <Setter Property="Opacity" Value="0.3"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- ListViewItem Style -->
        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Name="Bd" Height="50" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#404D5B"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#404D5B"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Background="Black">

        <ContentControl Content="{Binding CurrentViewModel}" Margin="65,0,0,0">

            <ContentControl.Resources>

                <DataTemplate DataType="{x:Type viewmodel:HomeViewModel}">
                    <local:HomeView />
                </DataTemplate>

                <DataTemplate DataType="{x:Type viewmodel:ContentViewModel}">
                    <local:ContentView />
                </DataTemplate>

            </ContentControl.Resources>


            <i:Interaction.Triggers>

                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                    <i:InvokeCommandAction Command="{Binding PreviewMouseLeftButtonDownCommand}"/>
                </i:EventTrigger>

            </i:Interaction.Triggers>

        </ContentControl>

        <DockPanel x:Name="nav_panel" HorizontalAlignment="Left" Width="65" Background="#2e333a" MouseLeftButtonDown="nav_panel_MouseLeftButtonDown">
            
            <!--Quit Button-->
            <ListViewItem Style="{StaticResource ListViewItemStyle}" DockPanel.Dock="Bottom" HorizontalAlignment="Left" Margin="0,0,0,15">
                <StackPanel Orientation="Horizontal" Width="230">
                    <Image Source="Assets/exit.png" Stretch="Fill" Height="30" Width="30" Margin="12,0,0,0"/>
                    <TextBlock Text="Exit" Margin="25,0,0,0" Style="{StaticResource font_style}"/>
                </StackPanel>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding DataContext.ExitCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <!-- ToolTip -->
                <ListViewItem.ToolTip>
                    <ToolTip x:Name="tooltip_exit" Content="Exit" Style="{StaticResource tooltip_style}">
                        <ToolTip.Visibility>
                            <Binding Path="IsToggleButtonChecked" Converter="{StaticResource BooleanNegationConverter}"/>
                        </ToolTip.Visibility>
                    </ToolTip>
                </ListViewItem.ToolTip>
            </ListViewItem>

            <StackPanel x:Name="stack_panel" DockPanel.Dock="Top">
                <!--// Grid for the Menu Toggle Button //-->
                <Grid Height="90">
                    <!--// Menu Title Text //-->
                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="73,-20,0,0" Text="M E N U" Foreground="White" FontSize="22" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource font_style}">
                        <!--// Shadow Effect //-->
                        <TextBlock.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="1" Direction="-90" Color="White"/>
                        </TextBlock.Effect>
                    </TextBlock>
                    <!--// Toggle Button //-->
                    <ToggleButton x:Name="Tg_Btn" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="12,-20,0,0" Height="40" Width="40" BorderThickness="0" Style="{StaticResource tb_style}" IsChecked="{Binding IsToggleButtonChecked, Mode=TwoWay}">
                        <!--// Toggle Button default background Image //-->
                        <ToggleButton.Background>
                            <ImageBrush ImageSource="Assets/crown.png"/>
                        </ToggleButton.Background>
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="HideStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="nav_panel" Storyboard.TargetProperty="Width" From="230" To="65" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard x:Name="ShowStackPanel">
                                        <DoubleAnimation Storyboard.TargetName="nav_panel" Storyboard.TargetProperty="Width" From="65" To="230" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                    </ToggleButton>
                </Grid>

                <!--// ListView With Menu List Items //-->
                <ListView x:Name="ListView" Background="Transparent" BorderBrush="Transparent" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <!--// Home //-->
                    <ListViewItem Style="{StaticResource ListViewItemStyle}" HorizontalAlignment="Left" Margin="0,0,0,15" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <StackPanel Orientation="Horizontal" Width="230">
                            <Image Source="Assets/home.png" Stretch="Fill" Height="30" Width="30" Margin="12,0,0,0"/>
                            <TextBlock Text="Home" Margin="25,0,0,0" Style="{StaticResource font_style}"/>
                        </StackPanel>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.ShowHomeCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!-- ToolTip -->
                        <ListViewItem.ToolTip>
                            <ToolTip x:Name="tooltip_home" Content="Home" Style="{StaticResource tooltip_style}">
                                <ToolTip.Visibility>
                                    <Binding Path="IsToggleButtonChecked" Converter="{StaticResource BooleanNegationConverter}"/>
                                </ToolTip.Visibility>
                            </ToolTip>
                        </ListViewItem.ToolTip>
                    </ListViewItem>
                    <!--// Contacts //-->

                    <ListViewItem Style="{StaticResource ListViewItemStyle}" HorizontalAlignment="Left" Margin="0,0,0,15" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <StackPanel Orientation="Horizontal" Width="230">
                            <Image Source="Assets/check.png" Stretch="Fill" Height="30" Width="30" Margin="12,0,0,0"/>
                            <TextBlock Text="Content" Margin="25,0,0,0" Style="{StaticResource font_style}"/>
                        </StackPanel>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding DataContext.ShowContentCommand, RelativeSource={RelativeSource AncestorType=Window}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!-- ToolTip -->
                        <ListViewItem.ToolTip>
                            <ToolTip x:Name="tooltip_content" Content="Content" Style="{StaticResource tooltip_style}">
                                <ToolTip.Visibility>
                                    <Binding Path="IsToggleButtonChecked" Converter="{StaticResource BooleanNegationConverter}"/>
                                </ToolTip.Visibility>
                            </ToolTip>
                        </ListViewItem.ToolTip>
                    </ListViewItem>
                </ListView>
            </StackPanel>
        </DockPanel>
    </Grid>
</Window>
